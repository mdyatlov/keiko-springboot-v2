package com.theodo.albeniz.services;

import com.theodo.albeniz.dto.SignUpForm;
import com.theodo.albeniz.model.UserEntity;
import com.theodo.albeniz.repositories.UserEntityRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

@RequiredArgsConstructor
@Service
public class UserSignUpService {

    private final UserEntityRepository userRepository;
    private final PasswordEncoder passwordEncoder;

    public UserEntity signUp(SignUpForm user) {
        UserEntity appUser = userRepository.findByUsername(user.getUsername());
        if (appUser != null) {
            // User already exists. Can't create requested user
            throw new ResponseStatusException(HttpStatus.BAD_REQUEST, "User could not be created");
        }

        // Just Save in DB the UserEntity (id will be auto-generated by Hibernate)
        return userRepository.save(
                UserEntity
                        .builder()
                        .username(user.getUsername())
                        .password(passwordEncoder.encode(user.getPassword()))
                        .build()
        );
    }
}
